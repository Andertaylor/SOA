{
  "{\"sourceRoot\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\",\"filename\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server",
      "filename": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar _login = _interopRequireDefault(require(\"./api/v1/login\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Hapi = require(\"hapi\");\n\nvar mongoose = require('mongoose');\n\nvar lineUp = false;\nvar tentUp = false;\nvar sensorState = true; //Connect to mongo instance\n\nmongoose.connect('mongodb+srv://soa:prueba123@clustertendedero-qbev4.mongodb.net/test?retryWrites=true&w=majority');\nmongoose.connection.once('open', function () {\n  console.log('connected to database');\n}); // Create a server with a host and port\n\nvar server = Hapi.server({\n  host: '192.168.1.10',\n  port: 8080\n});\n(0, _login[\"default\"])(server); // Add the route\n\nserver.route({\n  method: 'GET',\n  path: '/clothesline/updown',\n  handler: function handler(request, h) {\n    return lineUp;\n  }\n});\nserver.route({\n  method: 'GET',\n  path: '/clothesline/openclosed',\n  handler: function handler(request, h) {\n    return tentUp;\n  }\n});\nserver.route({\n  method: 'GET',\n  path: '/clothesline/sensor',\n  handler: function handler(request, h) {\n    return sensorState;\n  }\n});\nserver.route({\n  method: 'POST',\n  path: '/clothesline/updown',\n  handler: function handler(request, h) {\n    var payload = request.payload;\n    console.log(\"este s mi payload UPDOWN:\" + payload.line_Up); //quitar luego\n\n    lineUp = payload.line_Up;\n    return \"Recibed in server \".concat(encodeURIComponent(payload.line_Up), \"!\");\n  }\n});\nserver.route({\n  method: 'POST',\n  path: '/clothesline/openclosed',\n  handler: function handler(request, h) {\n    var payload = request.payload;\n    console.log(\"este s mi payload OPENCLOSE:\" + payload.tent_Up); //quitar luego\n\n    tentUp = payload.tent_Up;\n    return \"Recibed \".concat(encodeURIComponent(payload.tent_Up), \"!\");\n  }\n});\nserver.route({\n  method: 'POST',\n  path: '/clothesline/sensor',\n  handler: function handler(request, h) {\n    var payload = request.payload;\n    console.log(\"este s mi payload SENSOR:\" + payload.sensor_State); //quitar luego\n\n    sensorState = payload.sensor_State;\n    return \"Recibed \".concat(encodeURIComponent(payload.sensor_State), \"!\");\n  }\n}); // Start the server\n\nvar start =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return server.start();\n\n          case 3:\n            _context.next = 9;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            process.exit(1);\n\n          case 9:\n            console.log('Server running at:', server.info.uri);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 5]]);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkhhcGkiLCJyZXF1aXJlIiwibW9uZ29vc2UiLCJsaW5lVXAiLCJ0ZW50VXAiLCJzZW5zb3JTdGF0ZSIsImNvbm5lY3QiLCJjb25uZWN0aW9uIiwib25jZSIsImNvbnNvbGUiLCJsb2ciLCJzZXJ2ZXIiLCJob3N0IiwicG9ydCIsInJvdXRlIiwibWV0aG9kIiwicGF0aCIsImhhbmRsZXIiLCJyZXF1ZXN0IiwiaCIsInBheWxvYWQiLCJsaW5lX1VwIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwidGVudF9VcCIsInNlbnNvcl9TdGF0ZSIsInN0YXJ0IiwicHJvY2VzcyIsImV4aXQiLCJpbmZvIiwidXJpIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFHQTs7Ozs7Ozs7QUFGQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1DLFFBQVEsR0FBR0QsT0FBTyxDQUFFLFVBQUYsQ0FBeEI7O0FBSUEsSUFBSUUsTUFBTSxHQUFHLEtBQWI7QUFDQSxJQUFJQyxNQUFNLEdBQUcsS0FBYjtBQUNBLElBQUlDLFdBQVcsR0FBRyxJQUFsQixDLENBRUE7O0FBQ0FILFFBQVEsQ0FBQ0ksT0FBVCxDQUFpQixpR0FBakI7QUFDQUosUUFBUSxDQUFDSyxVQUFULENBQW9CQyxJQUFwQixDQUF5QixNQUF6QixFQUFpQyxZQUFNO0FBQ25DQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBWjtBQUNILENBRkQsRSxDQUlBOztBQUNBLElBQU1DLE1BQU0sR0FBR1gsSUFBSSxDQUFDVyxNQUFMLENBQVk7QUFDekJDLEVBQUFBLElBQUksRUFBRSxjQURtQjtBQUV6QkMsRUFBQUEsSUFBSSxFQUFFO0FBRm1CLENBQVosQ0FBZjtBQUtBLHVCQUFtQkYsTUFBbkIsRSxDQUVBOztBQUNBQSxNQUFNLENBQUNHLEtBQVAsQ0FBYTtBQUNYQyxFQUFBQSxNQUFNLEVBQUUsS0FERztBQUVYQyxFQUFBQSxJQUFJLEVBQUUscUJBRks7QUFHWEMsRUFBQUEsT0FBTyxFQUFFLGlCQUFTQyxPQUFULEVBQWtCQyxDQUFsQixFQUFxQjtBQUM1QixXQUFPaEIsTUFBUDtBQUNEO0FBTFUsQ0FBYjtBQVFBUSxNQUFNLENBQUNHLEtBQVAsQ0FBYTtBQUNUQyxFQUFBQSxNQUFNLEVBQUUsS0FEQztBQUVUQyxFQUFBQSxJQUFJLEVBQUUseUJBRkc7QUFHVEMsRUFBQUEsT0FBTyxFQUFFLGlCQUFTQyxPQUFULEVBQWtCQyxDQUFsQixFQUFxQjtBQUM1QixXQUFPZixNQUFQO0FBQ0Q7QUFMUSxDQUFiO0FBUUFPLE1BQU0sQ0FBQ0csS0FBUCxDQUFhO0FBQ1hDLEVBQUFBLE1BQU0sRUFBRSxLQURHO0FBRVhDLEVBQUFBLElBQUksRUFBRSxxQkFGSztBQUdYQyxFQUFBQSxPQUFPLEVBQUUsaUJBQVNDLE9BQVQsRUFBa0JDLENBQWxCLEVBQXFCO0FBQzVCLFdBQU9kLFdBQVA7QUFDRDtBQUxVLENBQWI7QUFRQU0sTUFBTSxDQUFDRyxLQUFQLENBQWE7QUFDVEMsRUFBQUEsTUFBTSxFQUFFLE1BREM7QUFFVEMsRUFBQUEsSUFBSSxFQUFFLHFCQUZHO0FBR1RDLEVBQUFBLE9BQU8sRUFBRSxpQkFBVUMsT0FBVixFQUFtQkMsQ0FBbkIsRUFBc0I7QUFDM0IsUUFBTUMsT0FBTyxHQUFHRixPQUFPLENBQUNFLE9BQXhCO0FBQ0FYLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDhCQUE4QlUsT0FBTyxDQUFDQyxPQUFsRCxFQUYyQixDQUVrQzs7QUFDN0RsQixJQUFBQSxNQUFNLEdBQUdpQixPQUFPLENBQUNDLE9BQWpCO0FBQ0EsdUNBQTRCQyxrQkFBa0IsQ0FBQ0YsT0FBTyxDQUFDQyxPQUFULENBQTlDO0FBQ0g7QUFSUSxDQUFiO0FBV0FWLE1BQU0sQ0FBQ0csS0FBUCxDQUFhO0FBQ1RDLEVBQUFBLE1BQU0sRUFBRSxNQURDO0FBRVRDLEVBQUFBLElBQUksRUFBRSx5QkFGRztBQUdUQyxFQUFBQSxPQUFPLEVBQUUsaUJBQVVDLE9BQVYsRUFBbUJDLENBQW5CLEVBQXNCO0FBQzNCLFFBQU1DLE9BQU8sR0FBR0YsT0FBTyxDQUFDRSxPQUF4QjtBQUNBWCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQ0FBaUNVLE9BQU8sQ0FBQ0csT0FBckQsRUFGMkIsQ0FFcUM7O0FBQ2hFbkIsSUFBQUEsTUFBTSxHQUFHZ0IsT0FBTyxDQUFDRyxPQUFqQjtBQUNBLDZCQUFrQkQsa0JBQWtCLENBQUNGLE9BQU8sQ0FBQ0csT0FBVCxDQUFwQztBQUNIO0FBUlEsQ0FBYjtBQVdBWixNQUFNLENBQUNHLEtBQVAsQ0FBYTtBQUNYQyxFQUFBQSxNQUFNLEVBQUUsTUFERztBQUVYQyxFQUFBQSxJQUFJLEVBQUUscUJBRks7QUFHWEMsRUFBQUEsT0FBTyxFQUFFLGlCQUFVQyxPQUFWLEVBQW1CQyxDQUFuQixFQUFzQjtBQUMzQixRQUFNQyxPQUFPLEdBQUdGLE9BQU8sQ0FBQ0UsT0FBeEI7QUFDQVgsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksOEJBQThCVSxPQUFPLENBQUNJLFlBQWxELEVBRjJCLENBRXVDOztBQUNsRW5CLElBQUFBLFdBQVcsR0FBR2UsT0FBTyxDQUFDSSxZQUF0QjtBQUNBLDZCQUFrQkYsa0JBQWtCLENBQUNGLE9BQU8sQ0FBQ0ksWUFBVCxDQUFwQztBQUNIO0FBUlUsQ0FBYixFLENBV0E7O0FBQ0EsSUFBTUMsS0FBSztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFFSmQsTUFBTSxDQUFDYyxLQUFQLEVBRkk7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUlWaEIsWUFBQUEsT0FBTyxDQUFDQyxHQUFSO0FBQ0FnQixZQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYSxDQUFiOztBQUxVO0FBT1psQixZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxvQkFBWixFQUFrQ0MsTUFBTSxDQUFDaUIsSUFBUCxDQUFZQyxHQUE5Qzs7QUFQWTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFMSixLQUFLO0FBQUE7QUFBQTtBQUFBLEdBQVg7O0FBVUFBLEtBQUsiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxVU1VBUklPXFxEb2N1bWVudHNcXEdpdEh1YlxcU09BXFxzZXJ2ZXJcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuY29uc3QgSGFwaSA9IHJlcXVpcmUoXCJoYXBpXCIpO1xyXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUgKCdtb25nb29zZScpO1xyXG5pbXBvcnQgQ3JlYXRlTG9naW5zUm91dGVzIGZyb20gXCIuL2FwaS92MS9sb2dpblwiO1xyXG5cclxuXHJcbnZhciBsaW5lVXAgPSBmYWxzZTtcclxudmFyIHRlbnRVcCA9IGZhbHNlO1xyXG52YXIgc2Vuc29yU3RhdGUgPSB0cnVlO1xyXG5cclxuLy9Db25uZWN0IHRvIG1vbmdvIGluc3RhbmNlXHJcbm1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vc29hOnBydWViYTEyM0BjbHVzdGVydGVuZGVkZXJvLXFiZXY0Lm1vbmdvZGIubmV0L3Rlc3Q/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5JylcclxubW9uZ29vc2UuY29ubmVjdGlvbi5vbmNlKCdvcGVuJywgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ2Nvbm5lY3RlZCB0byBkYXRhYmFzZScpXHJcbn0pXHJcblxyXG4vLyBDcmVhdGUgYSBzZXJ2ZXIgd2l0aCBhIGhvc3QgYW5kIHBvcnRcclxuY29uc3Qgc2VydmVyID0gSGFwaS5zZXJ2ZXIoe1xyXG4gIGhvc3Q6ICcxOTIuMTY4LjEuMTAnLFxyXG4gIHBvcnQ6IDgwODBcclxufSk7XHJcblxyXG5DcmVhdGVMb2dpbnNSb3V0ZXMoc2VydmVyKTtcclxuXHJcbi8vIEFkZCB0aGUgcm91dGVcclxuc2VydmVyLnJvdXRlKHtcclxuICBtZXRob2Q6ICdHRVQnLFxyXG4gIHBhdGg6ICcvY2xvdGhlc2xpbmUvdXBkb3duJyxcclxuICBoYW5kbGVyOiBmdW5jdGlvbihyZXF1ZXN0LCBoKSB7XHJcbiAgICByZXR1cm4gbGluZVVwO1xyXG4gIH1cclxufSk7XHJcblxyXG5zZXJ2ZXIucm91dGUoe1xyXG4gICAgbWV0aG9kOiAnR0VUJyxcclxuICAgIHBhdGg6ICcvY2xvdGhlc2xpbmUvb3BlbmNsb3NlZCcsXHJcbiAgICBoYW5kbGVyOiBmdW5jdGlvbihyZXF1ZXN0LCBoKSB7XHJcbiAgICAgIHJldHVybiB0ZW50VXA7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG5zZXJ2ZXIucm91dGUoe1xyXG4gIG1ldGhvZDogJ0dFVCcsXHJcbiAgcGF0aDogJy9jbG90aGVzbGluZS9zZW5zb3InLFxyXG4gIGhhbmRsZXI6IGZ1bmN0aW9uKHJlcXVlc3QsIGgpIHtcclxuICAgIHJldHVybiBzZW5zb3JTdGF0ZTtcclxuICB9XHJcbn0pO1xyXG5cclxuc2VydmVyLnJvdXRlKHtcclxuICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgcGF0aDogJy9jbG90aGVzbGluZS91cGRvd24nLFxyXG4gICAgaGFuZGxlcjogZnVuY3Rpb24gKHJlcXVlc3QsIGgpIHtcclxuICAgICAgICBjb25zdCBwYXlsb2FkID0gcmVxdWVzdC5wYXlsb2FkO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiZXN0ZSBzIG1pIHBheWxvYWQgVVBET1dOOlwiICsgcGF5bG9hZC5saW5lX1VwKTsgIC8vcXVpdGFyIGx1ZWdvXHJcbiAgICAgICAgbGluZVVwID0gcGF5bG9hZC5saW5lX1VwO1xyXG4gICAgICAgIHJldHVybiBgUmVjaWJlZCBpbiBzZXJ2ZXIgJHtlbmNvZGVVUklDb21wb25lbnQocGF5bG9hZC5saW5lX1VwKX0hYDtcclxuICAgIH1cclxufSk7XHJcblxyXG5zZXJ2ZXIucm91dGUoe1xyXG4gICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICBwYXRoOiAnL2Nsb3RoZXNsaW5lL29wZW5jbG9zZWQnLFxyXG4gICAgaGFuZGxlcjogZnVuY3Rpb24gKHJlcXVlc3QsIGgpIHtcclxuICAgICAgICBjb25zdCBwYXlsb2FkID0gcmVxdWVzdC5wYXlsb2FkO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiZXN0ZSBzIG1pIHBheWxvYWQgT1BFTkNMT1NFOlwiICsgcGF5bG9hZC50ZW50X1VwKTsgIC8vcXVpdGFyIGx1ZWdvXHJcbiAgICAgICAgdGVudFVwID0gcGF5bG9hZC50ZW50X1VwO1xyXG4gICAgICAgIHJldHVybiBgUmVjaWJlZCAke2VuY29kZVVSSUNvbXBvbmVudChwYXlsb2FkLnRlbnRfVXApfSFgO1xyXG4gICAgfVxyXG59KTtcclxuXHJcbnNlcnZlci5yb3V0ZSh7XHJcbiAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgcGF0aDogJy9jbG90aGVzbGluZS9zZW5zb3InLFxyXG4gIGhhbmRsZXI6IGZ1bmN0aW9uIChyZXF1ZXN0LCBoKSB7XHJcbiAgICAgIGNvbnN0IHBheWxvYWQgPSByZXF1ZXN0LnBheWxvYWQ7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiZXN0ZSBzIG1pIHBheWxvYWQgU0VOU09SOlwiICsgcGF5bG9hZC5zZW5zb3JfU3RhdGUpOyAgLy9xdWl0YXIgbHVlZ29cclxuICAgICAgc2Vuc29yU3RhdGUgPSBwYXlsb2FkLnNlbnNvcl9TdGF0ZTtcclxuICAgICAgcmV0dXJuIGBSZWNpYmVkICR7ZW5jb2RlVVJJQ29tcG9uZW50KHBheWxvYWQuc2Vuc29yX1N0YXRlKX0hYDtcclxuICB9XHJcbn0pO1xyXG5cclxuLy8gU3RhcnQgdGhlIHNlcnZlclxyXG5jb25zdCBzdGFydCA9IGFzeW5jIGZ1bmN0aW9uKCkge1xyXG4gIHRyeSB7XHJcbiAgICBhd2FpdCBzZXJ2ZXIuc3RhcnQoKTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICBwcm9jZXNzLmV4aXQoMSk7XHJcbiAgfVxyXG4gIGNvbnNvbGUubG9nKCdTZXJ2ZXIgcnVubmluZyBhdDonLCBzZXJ2ZXIuaW5mby51cmkpO1xyXG59O1xyXG5cclxuc3RhcnQoKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Hapi",
        "require",
        "mongoose",
        "lineUp",
        "tentUp",
        "sensorState",
        "connect",
        "connection",
        "once",
        "console",
        "log",
        "server",
        "host",
        "port",
        "route",
        "method",
        "path",
        "handler",
        "request",
        "h",
        "payload",
        "line_Up",
        "encodeURIComponent",
        "tent_Up",
        "sensor_State",
        "start",
        "process",
        "exit",
        "info",
        "uri"
      ],
      "mappings": "AAAA;;AAGA;;;;;;;;AAFA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAE,UAAF,CAAxB;;AAIA,IAAIE,MAAM,GAAG,KAAb;AACA,IAAIC,MAAM,GAAG,KAAb;AACA,IAAIC,WAAW,GAAG,IAAlB,C,CAEA;;AACAH,QAAQ,CAACI,OAAT,CAAiB,iGAAjB;AACAJ,QAAQ,CAACK,UAAT,CAAoBC,IAApB,CAAyB,MAAzB,EAAiC,YAAM;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,CAFD,E,CAIA;;AACA,IAAMC,MAAM,GAAGX,IAAI,CAACW,MAAL,CAAY;AACzBC,EAAAA,IAAI,EAAE,cADmB;AAEzBC,EAAAA,IAAI,EAAE;AAFmB,CAAZ,CAAf;AAKA,uBAAmBF,MAAnB,E,CAEA;;AACAA,MAAM,CAACG,KAAP,CAAa;AACXC,EAAAA,MAAM,EAAE,KADG;AAEXC,EAAAA,IAAI,EAAE,qBAFK;AAGXC,EAAAA,OAAO,EAAE,iBAASC,OAAT,EAAkBC,CAAlB,EAAqB;AAC5B,WAAOhB,MAAP;AACD;AALU,CAAb;AAQAQ,MAAM,CAACG,KAAP,CAAa;AACTC,EAAAA,MAAM,EAAE,KADC;AAETC,EAAAA,IAAI,EAAE,yBAFG;AAGTC,EAAAA,OAAO,EAAE,iBAASC,OAAT,EAAkBC,CAAlB,EAAqB;AAC5B,WAAOf,MAAP;AACD;AALQ,CAAb;AAQAO,MAAM,CAACG,KAAP,CAAa;AACXC,EAAAA,MAAM,EAAE,KADG;AAEXC,EAAAA,IAAI,EAAE,qBAFK;AAGXC,EAAAA,OAAO,EAAE,iBAASC,OAAT,EAAkBC,CAAlB,EAAqB;AAC5B,WAAOd,WAAP;AACD;AALU,CAAb;AAQAM,MAAM,CAACG,KAAP,CAAa;AACTC,EAAAA,MAAM,EAAE,MADC;AAETC,EAAAA,IAAI,EAAE,qBAFG;AAGTC,EAAAA,OAAO,EAAE,iBAAUC,OAAV,EAAmBC,CAAnB,EAAsB;AAC3B,QAAMC,OAAO,GAAGF,OAAO,CAACE,OAAxB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BU,OAAO,CAACC,OAAlD,EAF2B,CAEkC;;AAC7DlB,IAAAA,MAAM,GAAGiB,OAAO,CAACC,OAAjB;AACA,uCAA4BC,kBAAkB,CAACF,OAAO,CAACC,OAAT,CAA9C;AACH;AARQ,CAAb;AAWAV,MAAM,CAACG,KAAP,CAAa;AACTC,EAAAA,MAAM,EAAE,MADC;AAETC,EAAAA,IAAI,EAAE,yBAFG;AAGTC,EAAAA,OAAO,EAAE,iBAAUC,OAAV,EAAmBC,CAAnB,EAAsB;AAC3B,QAAMC,OAAO,GAAGF,OAAO,CAACE,OAAxB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCU,OAAO,CAACG,OAArD,EAF2B,CAEqC;;AAChEnB,IAAAA,MAAM,GAAGgB,OAAO,CAACG,OAAjB;AACA,6BAAkBD,kBAAkB,CAACF,OAAO,CAACG,OAAT,CAApC;AACH;AARQ,CAAb;AAWAZ,MAAM,CAACG,KAAP,CAAa;AACXC,EAAAA,MAAM,EAAE,MADG;AAEXC,EAAAA,IAAI,EAAE,qBAFK;AAGXC,EAAAA,OAAO,EAAE,iBAAUC,OAAV,EAAmBC,CAAnB,EAAsB;AAC3B,QAAMC,OAAO,GAAGF,OAAO,CAACE,OAAxB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BU,OAAO,CAACI,YAAlD,EAF2B,CAEuC;;AAClEnB,IAAAA,WAAW,GAAGe,OAAO,CAACI,YAAtB;AACA,6BAAkBF,kBAAkB,CAACF,OAAO,CAACI,YAAT,CAApC;AACH;AARU,CAAb,E,CAWA;;AACA,IAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEJd,MAAM,CAACc,KAAP,EAFI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIVhB,YAAAA,OAAO,CAACC,GAAR;AACAgB,YAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;;AALU;AAOZlB,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,MAAM,CAACiB,IAAP,CAAYC,GAA9C;;AAPY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALJ,KAAK;AAAA;AAAA;AAAA,GAAX;;AAUAA,KAAK",
      "sourceRoot": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src",
      "sourcesContent": [
        "'use strict';\r\nconst Hapi = require(\"hapi\");\r\nconst mongoose = require ('mongoose');\r\nimport CreateLoginsRoutes from \"./api/v1/login\";\r\n\r\n\r\nvar lineUp = false;\r\nvar tentUp = false;\r\nvar sensorState = true;\r\n\r\n//Connect to mongo instance\r\nmongoose.connect('mongodb+srv://soa:prueba123@clustertendedero-qbev4.mongodb.net/test?retryWrites=true&w=majority')\r\nmongoose.connection.once('open', () => {\r\n    console.log('connected to database')\r\n})\r\n\r\n// Create a server with a host and port\r\nconst server = Hapi.server({\r\n  host: '192.168.1.10',\r\n  port: 8080\r\n});\r\n\r\nCreateLoginsRoutes(server);\r\n\r\n// Add the route\r\nserver.route({\r\n  method: 'GET',\r\n  path: '/clothesline/updown',\r\n  handler: function(request, h) {\r\n    return lineUp;\r\n  }\r\n});\r\n\r\nserver.route({\r\n    method: 'GET',\r\n    path: '/clothesline/openclosed',\r\n    handler: function(request, h) {\r\n      return tentUp;\r\n    }\r\n  });\r\n\r\nserver.route({\r\n  method: 'GET',\r\n  path: '/clothesline/sensor',\r\n  handler: function(request, h) {\r\n    return sensorState;\r\n  }\r\n});\r\n\r\nserver.route({\r\n    method: 'POST',\r\n    path: '/clothesline/updown',\r\n    handler: function (request, h) {\r\n        const payload = request.payload;\r\n        console.log(\"este s mi payload UPDOWN:\" + payload.line_Up);  //quitar luego\r\n        lineUp = payload.line_Up;\r\n        return `Recibed in server ${encodeURIComponent(payload.line_Up)}!`;\r\n    }\r\n});\r\n\r\nserver.route({\r\n    method: 'POST',\r\n    path: '/clothesline/openclosed',\r\n    handler: function (request, h) {\r\n        const payload = request.payload;\r\n        console.log(\"este s mi payload OPENCLOSE:\" + payload.tent_Up);  //quitar luego\r\n        tentUp = payload.tent_Up;\r\n        return `Recibed ${encodeURIComponent(payload.tent_Up)}!`;\r\n    }\r\n});\r\n\r\nserver.route({\r\n  method: 'POST',\r\n  path: '/clothesline/sensor',\r\n  handler: function (request, h) {\r\n      const payload = request.payload;\r\n      console.log(\"este s mi payload SENSOR:\" + payload.sensor_State);  //quitar luego\r\n      sensorState = payload.sensor_State;\r\n      return `Recibed ${encodeURIComponent(payload.sensor_State)}!`;\r\n  }\r\n});\r\n\r\n// Start the server\r\nconst start = async function() {\r\n  try {\r\n    await server.start();\r\n  } catch (err) {\r\n    console.log(err);\r\n    process.exit(1);\r\n  }\r\n  console.log('Server running at:', server.info.uri);\r\n};\r\n\r\nstart();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561269263969
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\\\\src\\\\api\\\\v1\\\\login\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\",\"filename\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\\\\src\\\\api\\\\v1\\\\login\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\api\\v1\\login",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server",
      "filename": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\api\\v1\\login\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\api\\v1\\login\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\api\\v1\\login\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\api\\v1\\login",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _user = _interopRequireDefault(require(\"../../../models/user\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction CreateLoginsRoutes(server) {\n  server.route([{\n    method: \"GET\",\n    path: \"/api/v1/login\",\n    handler: function handler(request, reply) {\n      var _request$query = request.query,\n          userName = _request$query.userName,\n          password = _request$query.password;\n\n      var registro = _user[\"default\"].find({\n        userName: userName,\n        password: password\n      });\n\n      registro.count();\n      return registro;\n    }\n  }, {\n    method: \"POST\",\n    path: \"/api/v1/login\",\n    handler: function handler(request, reply) {\n      var _request$payload = request.payload,\n          userName = _request$payload.userName,\n          password = _request$payload.password,\n          email = _request$payload.email;\n      var user = new _user[\"default\"]({\n        userName: userName,\n        password: password,\n        email: email\n      });\n      return user.save();\n    }\n  }]);\n}\n\nvar _default = CreateLoginsRoutes;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkNyZWF0ZUxvZ2luc1JvdXRlcyIsInNlcnZlciIsInJvdXRlIiwibWV0aG9kIiwicGF0aCIsImhhbmRsZXIiLCJyZXF1ZXN0IiwicmVwbHkiLCJxdWVyeSIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJyZWdpc3RybyIsIlVzZXIiLCJmaW5kIiwiY291bnQiLCJwYXlsb2FkIiwiZW1haWwiLCJ1c2VyIiwic2F2ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0EsU0FBU0Esa0JBQVQsQ0FBNkJDLE1BQTdCLEVBQW9DO0FBRXBDQSxFQUFBQSxNQUFNLENBQUNDLEtBQVAsQ0FBYSxDQUNUO0FBQ0lDLElBQUFBLE1BQU0sRUFBQyxLQURYO0FBRUlDLElBQUFBLElBQUksRUFBRSxlQUZWO0FBR0lDLElBQUFBLE9BQU8sRUFBRSxpQkFBVUMsT0FBVixFQUFrQkMsS0FBbEIsRUFBd0I7QUFBQSwyQkFDRkQsT0FBTyxDQUFDRSxLQUROO0FBQUEsVUFDdEJDLFFBRHNCLGtCQUN0QkEsUUFEc0I7QUFBQSxVQUNiQyxRQURhLGtCQUNiQSxRQURhOztBQUU3QixVQUFJQyxRQUFRLEdBQUdDLGlCQUFLQyxJQUFMLENBQVU7QUFBQ0osUUFBQUEsUUFBUSxFQUFDQSxRQUFWO0FBQW1CQyxRQUFBQSxRQUFRLEVBQUNBO0FBQTVCLE9BQVYsQ0FBZjs7QUFDQUMsTUFBQUEsUUFBUSxDQUFDRyxLQUFUO0FBQ0EsYUFBT0gsUUFBUDtBQUNIO0FBUkwsR0FEUyxFQVdUO0FBQ0lSLElBQUFBLE1BQU0sRUFBQyxNQURYO0FBRUlDLElBQUFBLElBQUksRUFBRSxlQUZWO0FBR0lDLElBQUFBLE9BQU8sRUFBRSxpQkFBVUMsT0FBVixFQUFrQkMsS0FBbEIsRUFBd0I7QUFBQSw2QkFDSUQsT0FBTyxDQUFDUyxPQURaO0FBQUEsVUFDdEJOLFFBRHNCLG9CQUN0QkEsUUFEc0I7QUFBQSxVQUNiQyxRQURhLG9CQUNiQSxRQURhO0FBQUEsVUFDSk0sS0FESSxvQkFDSkEsS0FESTtBQUU3QixVQUFNQyxJQUFJLEdBQUUsSUFBSUwsZ0JBQUosQ0FBVTtBQUNsQkgsUUFBQUEsUUFBUSxFQUFSQSxRQURrQjtBQUNUQyxRQUFBQSxRQUFRLEVBQVJBLFFBRFM7QUFDQU0sUUFBQUEsS0FBSyxFQUFMQTtBQURBLE9BQVYsQ0FBWjtBQUdBLGFBQU9DLElBQUksQ0FBQ0MsSUFBTCxFQUFQO0FBQ0g7QUFUTCxHQVhTLENBQWI7QUF3QkM7O2VBQ2NsQixrQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFVTVUFSSU9cXERvY3VtZW50c1xcR2l0SHViXFxTT0FcXHNlcnZlclxcc3JjXFxhcGlcXHYxXFxsb2dpbiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVc2VyIGZyb20gXCIuLi8uLi8uLi9tb2RlbHMvdXNlclwiO1xuZnVuY3Rpb24gQ3JlYXRlTG9naW5zUm91dGVzIChzZXJ2ZXIpe1xuXG5zZXJ2ZXIucm91dGUoW1xuICAgIHtcbiAgICAgICAgbWV0aG9kOlwiR0VUXCIsXG4gICAgICAgIHBhdGg6IFwiL2FwaS92MS9sb2dpblwiLFxuICAgICAgICBoYW5kbGVyOiBmdW5jdGlvbiAocmVxdWVzdCxyZXBseSl7XG4gICAgICAgICAgICBjb25zdCB7dXNlck5hbWUscGFzc3dvcmR9PSByZXF1ZXN0LnF1ZXJ5O1xuICAgICAgICAgICAgdmFyIHJlZ2lzdHJvID0gVXNlci5maW5kKHt1c2VyTmFtZTp1c2VyTmFtZSxwYXNzd29yZDpwYXNzd29yZH0pXG4gICAgICAgICAgICByZWdpc3Ryby5jb3VudCgpXG4gICAgICAgICAgICByZXR1cm4gcmVnaXN0cm9cbiAgICAgICAgfVxuICAgIH0sXG4gICAge1xuICAgICAgICBtZXRob2Q6XCJQT1NUXCIsXG4gICAgICAgIHBhdGg6IFwiL2FwaS92MS9sb2dpblwiLFxuICAgICAgICBoYW5kbGVyOiBmdW5jdGlvbiAocmVxdWVzdCxyZXBseSl7XG4gICAgICAgICAgICBjb25zdCB7dXNlck5hbWUscGFzc3dvcmQsZW1haWx9PSByZXF1ZXN0LnBheWxvYWQ7XG4gICAgICAgICAgICBjb25zdCB1c2VyID1uZXcgVXNlciAoe1xuICAgICAgICAgICAgICAgIHVzZXJOYW1lLHBhc3N3b3JkLGVtYWlsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgcmV0dXJuIHVzZXIuc2F2ZSgpO1xuICAgICAgICB9XG4gICAgfVxuXSlcblxufVxuZXhwb3J0IGRlZmF1bHQgQ3JlYXRlTG9naW5zUm91dGVzXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "CreateLoginsRoutes",
        "server",
        "route",
        "method",
        "path",
        "handler",
        "request",
        "reply",
        "query",
        "userName",
        "password",
        "registro",
        "User",
        "find",
        "count",
        "payload",
        "email",
        "user",
        "save"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA,SAASA,kBAAT,CAA6BC,MAA7B,EAAoC;AAEpCA,EAAAA,MAAM,CAACC,KAAP,CAAa,CACT;AACIC,IAAAA,MAAM,EAAC,KADX;AAEIC,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,OAAO,EAAE,iBAAUC,OAAV,EAAkBC,KAAlB,EAAwB;AAAA,2BACFD,OAAO,CAACE,KADN;AAAA,UACtBC,QADsB,kBACtBA,QADsB;AAAA,UACbC,QADa,kBACbA,QADa;;AAE7B,UAAIC,QAAQ,GAAGC,iBAAKC,IAAL,CAAU;AAACJ,QAAAA,QAAQ,EAACA,QAAV;AAAmBC,QAAAA,QAAQ,EAACA;AAA5B,OAAV,CAAf;;AACAC,MAAAA,QAAQ,CAACG,KAAT;AACA,aAAOH,QAAP;AACH;AARL,GADS,EAWT;AACIR,IAAAA,MAAM,EAAC,MADX;AAEIC,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,OAAO,EAAE,iBAAUC,OAAV,EAAkBC,KAAlB,EAAwB;AAAA,6BACID,OAAO,CAACS,OADZ;AAAA,UACtBN,QADsB,oBACtBA,QADsB;AAAA,UACbC,QADa,oBACbA,QADa;AAAA,UACJM,KADI,oBACJA,KADI;AAE7B,UAAMC,IAAI,GAAE,IAAIL,gBAAJ,CAAU;AAClBH,QAAAA,QAAQ,EAARA,QADkB;AACTC,QAAAA,QAAQ,EAARA,QADS;AACAM,QAAAA,KAAK,EAALA;AADA,OAAV,CAAZ;AAGA,aAAOC,IAAI,CAACC,IAAL,EAAP;AACH;AATL,GAXS,CAAb;AAwBC;;eACclB,kB",
      "sourceRoot": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\api\\v1\\login",
      "sourcesContent": [
        "import User from \"../../../models/user\";\nfunction CreateLoginsRoutes (server){\n\nserver.route([\n    {\n        method:\"GET\",\n        path: \"/api/v1/login\",\n        handler: function (request,reply){\n            const {userName,password}= request.query;\n            var registro = User.find({userName:userName,password:password})\n            registro.count()\n            return registro\n        }\n    },\n    {\n        method:\"POST\",\n        path: \"/api/v1/login\",\n        handler: function (request,reply){\n            const {userName,password,email}= request.payload;\n            const user =new User ({\n                userName,password,email\n            })\n            return user.save();\n        }\n    }\n])\n\n}\nexport default CreateLoginsRoutes\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555170393000
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\",\"filename\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\\\\src\\\\models\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\SOA\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server",
      "filename": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\models\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\models\\user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\models\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nvar UserSchema = new Schema({\n  userName: String,\n  password: String,\n  email: String\n});\n\nvar _default = _mongoose[\"default\"].model('User', UserSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJVc2VyU2NoZW1hIiwidXNlck5hbWUiLCJTdHJpbmciLCJwYXNzd29yZCIsImVtYWlsIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUNBLElBQU1BLE1BQU0sR0FBR0MscUJBQVNELE1BQXhCO0FBRUEsSUFBTUUsVUFBVSxHQUFHLElBQUlGLE1BQUosQ0FBVztBQUMxQkcsRUFBQUEsUUFBUSxFQUFFQyxNQURnQjtBQUUxQkMsRUFBQUEsUUFBUSxFQUFFRCxNQUZnQjtBQUcxQkUsRUFBQUEsS0FBSyxFQUFFRjtBQUhtQixDQUFYLENBQW5COztlQU1lSCxxQkFBU00sS0FBVCxDQUFlLE1BQWYsRUFBdUJMLFVBQXZCLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxVU1VBUklPXFxEb2N1bWVudHNcXEdpdEh1YlxcU09BXFxzZXJ2ZXJcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJ1xuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hXG5cbmNvbnN0IFVzZXJTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgICB1c2VyTmFtZTogU3RyaW5nLFxuICAgIHBhc3N3b3JkOiBTdHJpbmcsXG4gICAgZW1haWw6IFN0cmluZ1xufSlcblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ1VzZXInLCBVc2VyU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "UserSchema",
        "userName",
        "String",
        "password",
        "email",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AAEA,IAAME,UAAU,GAAG,IAAIF,MAAJ,CAAW;AAC1BG,EAAAA,QAAQ,EAAEC,MADgB;AAE1BC,EAAAA,QAAQ,EAAED,MAFgB;AAG1BE,EAAAA,KAAK,EAAEF;AAHmB,CAAX,CAAnB;;eAMeH,qBAASM,KAAT,CAAe,MAAf,EAAuBL,UAAvB,C",
      "sourceRoot": "C:\\Users\\USUARIO\\Documents\\GitHub\\SOA\\server\\src\\models",
      "sourcesContent": [
        "import mongoose from 'mongoose'\nconst Schema = mongoose.Schema\n\nconst UserSchema = new Schema({\n    userName: String,\n    password: String,\n    email: String\n})\n\nexport default mongoose.model('User', UserSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555170393000
  }
}